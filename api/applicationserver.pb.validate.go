// Code generated by protoc-gen-validate. DO NOT EDIT.
// source: lorawan-stack/api/applicationserver.proto

package api

import (
	"bytes"
	"errors"
	"fmt"
	"net"
	"net/mail"
	"net/url"
	"regexp"
	"strings"
	"time"
	"unicode/utf8"

	"github.com/golang/protobuf/ptypes"
)

// ensure the imports are used
var (
	_ = bytes.MinRead
	_ = errors.New("")
	_ = fmt.Print
	_ = utf8.UTFMax
	_ = (*regexp.Regexp)(nil)
	_ = (*strings.Reader)(nil)
	_ = net.IPv4len
	_ = time.Duration(0)
	_ = (*url.URL)(nil)
	_ = (*mail.Address)(nil)
	_ = ptypes.DynamicAny{}
)

// define the regex for a UUID once up-front
var _applicationserver_uuidPattern = regexp.MustCompile("^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$")

// Validate checks the field values on ApplicationLink with the rules defined
// in the proto definition for this message. If any rules are violated, an
// error is returned.
func (m *ApplicationLink) Validate() error {
	if m == nil {
		return nil
	}

	if !_ApplicationLink_NetworkServerAddress_Pattern.MatchString(m.GetNetworkServerAddress()) {
		return ApplicationLinkValidationError{
			field:  "NetworkServerAddress",
			reason: "value does not match regex pattern \"^(?:(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\\\-]*[a-zA-Z0-9])\\\\.)*(?:[A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\\\-]*[A-Za-z0-9])(?::[0-9]{1,5})?$|^$\"",
		}
	}

	if utf8.RuneCountInString(m.GetApiKey()) < 1 {
		return ApplicationLinkValidationError{
			field:  "ApiKey",
			reason: "value length must be at least 1 runes",
		}
	}

	if v, ok := interface{}(m.GetDefaultFormatters()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return ApplicationLinkValidationError{
				field:  "DefaultFormatters",
				reason: "embedded message failed validation",
				cause:  err,
			}
		}
	}

	// no validation rules for Tls

	if v, ok := interface{}(m.GetSkipPayloadCrypto()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return ApplicationLinkValidationError{
				field:  "SkipPayloadCrypto",
				reason: "embedded message failed validation",
				cause:  err,
			}
		}
	}

	return nil
}

// ApplicationLinkValidationError is the validation error returned by
// ApplicationLink.Validate if the designated constraints aren't met.
type ApplicationLinkValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e ApplicationLinkValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e ApplicationLinkValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e ApplicationLinkValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e ApplicationLinkValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e ApplicationLinkValidationError) ErrorName() string { return "ApplicationLinkValidationError" }

// Error satisfies the builtin error interface
func (e ApplicationLinkValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sApplicationLink.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = ApplicationLinkValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = ApplicationLinkValidationError{}

var _ApplicationLink_NetworkServerAddress_Pattern = regexp.MustCompile("^(?:(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*(?:[A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])(?::[0-9]{1,5})?$|^$")

// Validate checks the field values on GetApplicationLinkRequest with the rules
// defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *GetApplicationLinkRequest) Validate() error {
	if m == nil {
		return nil
	}

	if m.GetApplicationIds() == nil {
		return GetApplicationLinkRequestValidationError{
			field:  "ApplicationIds",
			reason: "value is required",
		}
	}

	if v, ok := interface{}(m.GetApplicationIds()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return GetApplicationLinkRequestValidationError{
				field:  "ApplicationIds",
				reason: "embedded message failed validation",
				cause:  err,
			}
		}
	}

	if v, ok := interface{}(m.GetFieldMask()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return GetApplicationLinkRequestValidationError{
				field:  "FieldMask",
				reason: "embedded message failed validation",
				cause:  err,
			}
		}
	}

	return nil
}

// GetApplicationLinkRequestValidationError is the validation error returned by
// GetApplicationLinkRequest.Validate if the designated constraints aren't met.
type GetApplicationLinkRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e GetApplicationLinkRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e GetApplicationLinkRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e GetApplicationLinkRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e GetApplicationLinkRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e GetApplicationLinkRequestValidationError) ErrorName() string {
	return "GetApplicationLinkRequestValidationError"
}

// Error satisfies the builtin error interface
func (e GetApplicationLinkRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sGetApplicationLinkRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = GetApplicationLinkRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = GetApplicationLinkRequestValidationError{}

// Validate checks the field values on SetApplicationLinkRequest with the rules
// defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *SetApplicationLinkRequest) Validate() error {
	if m == nil {
		return nil
	}

	if m.GetApplicationIds() == nil {
		return SetApplicationLinkRequestValidationError{
			field:  "ApplicationIds",
			reason: "value is required",
		}
	}

	if v, ok := interface{}(m.GetApplicationIds()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return SetApplicationLinkRequestValidationError{
				field:  "ApplicationIds",
				reason: "embedded message failed validation",
				cause:  err,
			}
		}
	}

	if m.GetLink() == nil {
		return SetApplicationLinkRequestValidationError{
			field:  "Link",
			reason: "value is required",
		}
	}

	if v, ok := interface{}(m.GetLink()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return SetApplicationLinkRequestValidationError{
				field:  "Link",
				reason: "embedded message failed validation",
				cause:  err,
			}
		}
	}

	if v, ok := interface{}(m.GetFieldMask()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return SetApplicationLinkRequestValidationError{
				field:  "FieldMask",
				reason: "embedded message failed validation",
				cause:  err,
			}
		}
	}

	return nil
}

// SetApplicationLinkRequestValidationError is the validation error returned by
// SetApplicationLinkRequest.Validate if the designated constraints aren't met.
type SetApplicationLinkRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e SetApplicationLinkRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e SetApplicationLinkRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e SetApplicationLinkRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e SetApplicationLinkRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e SetApplicationLinkRequestValidationError) ErrorName() string {
	return "SetApplicationLinkRequestValidationError"
}

// Error satisfies the builtin error interface
func (e SetApplicationLinkRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sSetApplicationLinkRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = SetApplicationLinkRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = SetApplicationLinkRequestValidationError{}

// Validate checks the field values on ApplicationLinkStats with the rules
// defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *ApplicationLinkStats) Validate() error {
	if m == nil {
		return nil
	}

	if v, ok := interface{}(m.GetLinkedAt()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return ApplicationLinkStatsValidationError{
				field:  "LinkedAt",
				reason: "embedded message failed validation",
				cause:  err,
			}
		}
	}

	if !_ApplicationLinkStats_NetworkServerAddress_Pattern.MatchString(m.GetNetworkServerAddress()) {
		return ApplicationLinkStatsValidationError{
			field:  "NetworkServerAddress",
			reason: "value does not match regex pattern \"^(?:(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\\\-]*[a-zA-Z0-9])\\\\.)*(?:[A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\\\-]*[A-Za-z0-9])(?::[0-9]{1,5})?$|^$\"",
		}
	}

	if v, ok := interface{}(m.GetLastUpReceivedAt()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return ApplicationLinkStatsValidationError{
				field:  "LastUpReceivedAt",
				reason: "embedded message failed validation",
				cause:  err,
			}
		}
	}

	// no validation rules for UpCount

	if v, ok := interface{}(m.GetLastDownlinkForwardedAt()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return ApplicationLinkStatsValidationError{
				field:  "LastDownlinkForwardedAt",
				reason: "embedded message failed validation",
				cause:  err,
			}
		}
	}

	// no validation rules for DownlinkCount

	return nil
}

// ApplicationLinkStatsValidationError is the validation error returned by
// ApplicationLinkStats.Validate if the designated constraints aren't met.
type ApplicationLinkStatsValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e ApplicationLinkStatsValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e ApplicationLinkStatsValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e ApplicationLinkStatsValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e ApplicationLinkStatsValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e ApplicationLinkStatsValidationError) ErrorName() string {
	return "ApplicationLinkStatsValidationError"
}

// Error satisfies the builtin error interface
func (e ApplicationLinkStatsValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sApplicationLinkStats.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = ApplicationLinkStatsValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = ApplicationLinkStatsValidationError{}

var _ApplicationLinkStats_NetworkServerAddress_Pattern = regexp.MustCompile("^(?:(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*(?:[A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])(?::[0-9]{1,5})?$|^$")
