// Copyright Â© 2020 The Things Network Foundation, The Things Industries B.V.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: lorawan-stack/api/message_services.proto

package api

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EncodeDownlinkMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids                 *EndDeviceIdentifiers        `protobuf:"bytes,1,opt,name=ids,proto3" json:"ids,omitempty"`
	EndDeviceVersionIds *EndDeviceVersionIdentifiers `protobuf:"bytes,2,opt,name=end_device_version_ids,json=endDeviceVersionIds,proto3" json:"end_device_version_ids,omitempty"`
	Message             *ApplicationDownlink         `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Formatter           PayloadFormatter             `protobuf:"varint,4,opt,name=formatter,proto3,enum=ttn.lorawan.v3.PayloadFormatter" json:"formatter,omitempty"`
	Parameter           string                       `protobuf:"bytes,5,opt,name=parameter,proto3" json:"parameter,omitempty"`
}

func (x *EncodeDownlinkMessageRequest) Reset() {
	*x = EncodeDownlinkMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lorawan_stack_api_message_services_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncodeDownlinkMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncodeDownlinkMessageRequest) ProtoMessage() {}

func (x *EncodeDownlinkMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lorawan_stack_api_message_services_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncodeDownlinkMessageRequest.ProtoReflect.Descriptor instead.
func (*EncodeDownlinkMessageRequest) Descriptor() ([]byte, []int) {
	return file_lorawan_stack_api_message_services_proto_rawDescGZIP(), []int{0}
}

func (x *EncodeDownlinkMessageRequest) GetIds() *EndDeviceIdentifiers {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *EncodeDownlinkMessageRequest) GetEndDeviceVersionIds() *EndDeviceVersionIdentifiers {
	if x != nil {
		return x.EndDeviceVersionIds
	}
	return nil
}

func (x *EncodeDownlinkMessageRequest) GetMessage() *ApplicationDownlink {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *EncodeDownlinkMessageRequest) GetFormatter() PayloadFormatter {
	if x != nil {
		return x.Formatter
	}
	return PayloadFormatter_FORMATTER_NONE
}

func (x *EncodeDownlinkMessageRequest) GetParameter() string {
	if x != nil {
		return x.Parameter
	}
	return ""
}

type DecodeUplinkMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids                 *EndDeviceIdentifiers        `protobuf:"bytes,1,opt,name=ids,proto3" json:"ids,omitempty"`
	EndDeviceVersionIds *EndDeviceVersionIdentifiers `protobuf:"bytes,2,opt,name=end_device_version_ids,json=endDeviceVersionIds,proto3" json:"end_device_version_ids,omitempty"`
	Message             *ApplicationUplink           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Formatter           PayloadFormatter             `protobuf:"varint,4,opt,name=formatter,proto3,enum=ttn.lorawan.v3.PayloadFormatter" json:"formatter,omitempty"`
	Parameter           string                       `protobuf:"bytes,5,opt,name=parameter,proto3" json:"parameter,omitempty"`
}

func (x *DecodeUplinkMessageRequest) Reset() {
	*x = DecodeUplinkMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lorawan_stack_api_message_services_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodeUplinkMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeUplinkMessageRequest) ProtoMessage() {}

func (x *DecodeUplinkMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lorawan_stack_api_message_services_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeUplinkMessageRequest.ProtoReflect.Descriptor instead.
func (*DecodeUplinkMessageRequest) Descriptor() ([]byte, []int) {
	return file_lorawan_stack_api_message_services_proto_rawDescGZIP(), []int{1}
}

func (x *DecodeUplinkMessageRequest) GetIds() *EndDeviceIdentifiers {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DecodeUplinkMessageRequest) GetEndDeviceVersionIds() *EndDeviceVersionIdentifiers {
	if x != nil {
		return x.EndDeviceVersionIds
	}
	return nil
}

func (x *DecodeUplinkMessageRequest) GetMessage() *ApplicationUplink {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *DecodeUplinkMessageRequest) GetFormatter() PayloadFormatter {
	if x != nil {
		return x.Formatter
	}
	return PayloadFormatter_FORMATTER_NONE
}

func (x *DecodeUplinkMessageRequest) GetParameter() string {
	if x != nil {
		return x.Parameter
	}
	return ""
}

type DecodeDownlinkMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids                 *EndDeviceIdentifiers        `protobuf:"bytes,1,opt,name=ids,proto3" json:"ids,omitempty"`
	EndDeviceVersionIds *EndDeviceVersionIdentifiers `protobuf:"bytes,2,opt,name=end_device_version_ids,json=endDeviceVersionIds,proto3" json:"end_device_version_ids,omitempty"`
	Message             *ApplicationDownlink         `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Formatter           PayloadFormatter             `protobuf:"varint,4,opt,name=formatter,proto3,enum=ttn.lorawan.v3.PayloadFormatter" json:"formatter,omitempty"`
	Parameter           string                       `protobuf:"bytes,5,opt,name=parameter,proto3" json:"parameter,omitempty"`
}

func (x *DecodeDownlinkMessageRequest) Reset() {
	*x = DecodeDownlinkMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lorawan_stack_api_message_services_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodeDownlinkMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeDownlinkMessageRequest) ProtoMessage() {}

func (x *DecodeDownlinkMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lorawan_stack_api_message_services_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeDownlinkMessageRequest.ProtoReflect.Descriptor instead.
func (*DecodeDownlinkMessageRequest) Descriptor() ([]byte, []int) {
	return file_lorawan_stack_api_message_services_proto_rawDescGZIP(), []int{2}
}

func (x *DecodeDownlinkMessageRequest) GetIds() *EndDeviceIdentifiers {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DecodeDownlinkMessageRequest) GetEndDeviceVersionIds() *EndDeviceVersionIdentifiers {
	if x != nil {
		return x.EndDeviceVersionIds
	}
	return nil
}

func (x *DecodeDownlinkMessageRequest) GetMessage() *ApplicationDownlink {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *DecodeDownlinkMessageRequest) GetFormatter() PayloadFormatter {
	if x != nil {
		return x.Formatter
	}
	return PayloadFormatter_FORMATTER_NONE
}

func (x *DecodeDownlinkMessageRequest) GetParameter() string {
	if x != nil {
		return x.Parameter
	}
	return ""
}

var File_lorawan_stack_api_message_services_proto protoreflect.FileDescriptor

var file_lorawan_stack_api_message_services_proto_rawDesc = []byte{
	0x0a, 0x28, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e, 0x2d, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x74, 0x74, 0x6e, 0x2e,
	0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e, 0x2e, 0x76, 0x33, 0x1a, 0x41, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x6c, 0x6f,
	0x72, 0x61, 0x77, 0x61, 0x6e, 0x2d, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x65, 0x6e, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x23, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e, 0x2d, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e, 0x2d, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9b, 0x03, 0x0a, 0x1c, 0x45, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x74, 0x6e, 0x2e, 0x6c, 0x6f, 0x72, 0x61,
	0x77, 0x61, 0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x45, 0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x42, 0x10, 0xc8, 0xde, 0x1f,
	0x00, 0xd0, 0xde, 0x1f, 0x01, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x12, 0x85, 0x01, 0x0a, 0x16, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x74, 0x6e, 0x2e, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61,
	0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x45, 0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73,
	0x42, 0x23, 0xc8, 0xde, 0x1f, 0x00, 0xe2, 0xde, 0x1f, 0x13, 0x45, 0x6e, 0x64, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x73, 0xfa, 0x42, 0x05,
	0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x13, 0x65, 0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x4b, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x74,
	0x6e, 0x2e, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b,
	0x42, 0x0c, 0xc8, 0xde, 0x1f, 0x00, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x74, 0x74, 0x6e,
	0x2e, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x52, 0x09, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x22, 0x97, 0x03, 0x0a, 0x1a, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65,
	0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x74, 0x74, 0x6e, 0x2e, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e, 0x2e,
	0x76, 0x33, 0x2e, 0x45, 0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x42, 0x10, 0xc8, 0xde, 0x1f, 0x00, 0xd0, 0xde, 0x1f,
	0x01, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x85,
	0x01, 0x0a, 0x16, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x74, 0x74, 0x6e, 0x2e, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e, 0x2e, 0x76, 0x33,
	0x2e, 0x45, 0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x42, 0x23, 0xc8, 0xde,
	0x1f, 0x00, 0xe2, 0xde, 0x1f, 0x13, 0x45, 0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x73, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x13, 0x65, 0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x49, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x74, 0x6e, 0x2e, 0x6c, 0x6f,
	0x72, 0x61, 0x77, 0x61, 0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x42, 0x0c, 0xc8, 0xde, 0x1f, 0x00,
	0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x3e, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x74, 0x74, 0x6e, 0x2e, 0x6c, 0x6f, 0x72, 0x61, 0x77,
	0x61, 0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x22,
	0x9b, 0x03, 0x0a, 0x1c, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69,
	0x6e, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x48, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x74, 0x74, 0x6e, 0x2e, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x45,
	0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x73, 0x42, 0x10, 0xc8, 0xde, 0x1f, 0x00, 0xd0, 0xde, 0x1f, 0x01, 0xfa, 0x42, 0x05,
	0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x85, 0x01, 0x0a, 0x16, 0x65,
	0x6e, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x74,
	0x6e, 0x2e, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x45, 0x6e, 0x64,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x42, 0x23, 0xc8, 0xde, 0x1f, 0x00, 0xe2, 0xde,
	0x1f, 0x13, 0x45, 0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x73, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x13, 0x65,
	0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x73, 0x12, 0x4b, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x74, 0x6e, 0x2e, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61,
	0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x42, 0x0c, 0xc8, 0xde, 0x1f, 0x00, 0xfa, 0x42,
	0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x3e, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x20, 0x2e, 0x74, 0x74, 0x6e, 0x2e, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e,
	0x2e, 0x76, 0x33, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x32, 0xbb, 0x02,
	0x0a, 0x10, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x6f, 0x72, 0x12, 0x63, 0x0a, 0x0e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x2c, 0x2e, 0x74, 0x74, 0x6e, 0x2e, 0x6c, 0x6f, 0x72, 0x61, 0x77,
	0x61, 0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x69, 0x6e, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x74, 0x74, 0x6e, 0x2e, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e,
	0x2e, 0x76, 0x33, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x5d, 0x0a, 0x0c, 0x44, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x2a, 0x2e, 0x74, 0x74, 0x6e, 0x2e, 0x6c, 0x6f,
	0x72, 0x61, 0x77, 0x61, 0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x55,
	0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x74, 0x74, 0x6e, 0x2e, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61,
	0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x63, 0x0a, 0x0e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x2c, 0x2e, 0x74, 0x74, 0x6e, 0x2e, 0x6c,
	0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x74, 0x74, 0x6e, 0x2e, 0x6c, 0x6f, 0x72,
	0x61, 0x77, 0x61, 0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x42, 0x2b, 0x5a, 0x29, 0x67,
	0x6f, 0x2e, 0x74, 0x68, 0x65, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2f, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e, 0x2d, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lorawan_stack_api_message_services_proto_rawDescOnce sync.Once
	file_lorawan_stack_api_message_services_proto_rawDescData = file_lorawan_stack_api_message_services_proto_rawDesc
)

func file_lorawan_stack_api_message_services_proto_rawDescGZIP() []byte {
	file_lorawan_stack_api_message_services_proto_rawDescOnce.Do(func() {
		file_lorawan_stack_api_message_services_proto_rawDescData = protoimpl.X.CompressGZIP(file_lorawan_stack_api_message_services_proto_rawDescData)
	})
	return file_lorawan_stack_api_message_services_proto_rawDescData
}

var file_lorawan_stack_api_message_services_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_lorawan_stack_api_message_services_proto_goTypes = []interface{}{
	(*EncodeDownlinkMessageRequest)(nil), // 0: ttn.lorawan.v3.EncodeDownlinkMessageRequest
	(*DecodeUplinkMessageRequest)(nil),   // 1: ttn.lorawan.v3.DecodeUplinkMessageRequest
	(*DecodeDownlinkMessageRequest)(nil), // 2: ttn.lorawan.v3.DecodeDownlinkMessageRequest
	(*EndDeviceIdentifiers)(nil),         // 3: ttn.lorawan.v3.EndDeviceIdentifiers
	(*EndDeviceVersionIdentifiers)(nil),  // 4: ttn.lorawan.v3.EndDeviceVersionIdentifiers
	(*ApplicationDownlink)(nil),          // 5: ttn.lorawan.v3.ApplicationDownlink
	(PayloadFormatter)(0),                // 6: ttn.lorawan.v3.PayloadFormatter
	(*ApplicationUplink)(nil),            // 7: ttn.lorawan.v3.ApplicationUplink
}
var file_lorawan_stack_api_message_services_proto_depIdxs = []int32{
	3,  // 0: ttn.lorawan.v3.EncodeDownlinkMessageRequest.ids:type_name -> ttn.lorawan.v3.EndDeviceIdentifiers
	4,  // 1: ttn.lorawan.v3.EncodeDownlinkMessageRequest.end_device_version_ids:type_name -> ttn.lorawan.v3.EndDeviceVersionIdentifiers
	5,  // 2: ttn.lorawan.v3.EncodeDownlinkMessageRequest.message:type_name -> ttn.lorawan.v3.ApplicationDownlink
	6,  // 3: ttn.lorawan.v3.EncodeDownlinkMessageRequest.formatter:type_name -> ttn.lorawan.v3.PayloadFormatter
	3,  // 4: ttn.lorawan.v3.DecodeUplinkMessageRequest.ids:type_name -> ttn.lorawan.v3.EndDeviceIdentifiers
	4,  // 5: ttn.lorawan.v3.DecodeUplinkMessageRequest.end_device_version_ids:type_name -> ttn.lorawan.v3.EndDeviceVersionIdentifiers
	7,  // 6: ttn.lorawan.v3.DecodeUplinkMessageRequest.message:type_name -> ttn.lorawan.v3.ApplicationUplink
	6,  // 7: ttn.lorawan.v3.DecodeUplinkMessageRequest.formatter:type_name -> ttn.lorawan.v3.PayloadFormatter
	3,  // 8: ttn.lorawan.v3.DecodeDownlinkMessageRequest.ids:type_name -> ttn.lorawan.v3.EndDeviceIdentifiers
	4,  // 9: ttn.lorawan.v3.DecodeDownlinkMessageRequest.end_device_version_ids:type_name -> ttn.lorawan.v3.EndDeviceVersionIdentifiers
	5,  // 10: ttn.lorawan.v3.DecodeDownlinkMessageRequest.message:type_name -> ttn.lorawan.v3.ApplicationDownlink
	6,  // 11: ttn.lorawan.v3.DecodeDownlinkMessageRequest.formatter:type_name -> ttn.lorawan.v3.PayloadFormatter
	0,  // 12: ttn.lorawan.v3.MessageProcessor.EncodeDownlink:input_type -> ttn.lorawan.v3.EncodeDownlinkMessageRequest
	1,  // 13: ttn.lorawan.v3.MessageProcessor.DecodeUplink:input_type -> ttn.lorawan.v3.DecodeUplinkMessageRequest
	2,  // 14: ttn.lorawan.v3.MessageProcessor.DecodeDownlink:input_type -> ttn.lorawan.v3.DecodeDownlinkMessageRequest
	5,  // 15: ttn.lorawan.v3.MessageProcessor.EncodeDownlink:output_type -> ttn.lorawan.v3.ApplicationDownlink
	7,  // 16: ttn.lorawan.v3.MessageProcessor.DecodeUplink:output_type -> ttn.lorawan.v3.ApplicationUplink
	5,  // 17: ttn.lorawan.v3.MessageProcessor.DecodeDownlink:output_type -> ttn.lorawan.v3.ApplicationDownlink
	15, // [15:18] is the sub-list for method output_type
	12, // [12:15] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_lorawan_stack_api_message_services_proto_init() }
func file_lorawan_stack_api_message_services_proto_init() {
	if File_lorawan_stack_api_message_services_proto != nil {
		return
	}
	file_lorawan_stack_api_end_device_proto_init()
	file_lorawan_stack_api_identifiers_proto_init()
	file_lorawan_stack_api_messages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_lorawan_stack_api_message_services_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncodeDownlinkMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lorawan_stack_api_message_services_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodeUplinkMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lorawan_stack_api_message_services_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodeDownlinkMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lorawan_stack_api_message_services_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lorawan_stack_api_message_services_proto_goTypes,
		DependencyIndexes: file_lorawan_stack_api_message_services_proto_depIdxs,
		MessageInfos:      file_lorawan_stack_api_message_services_proto_msgTypes,
	}.Build()
	File_lorawan_stack_api_message_services_proto = out.File
	file_lorawan_stack_api_message_services_proto_rawDesc = nil
	file_lorawan_stack_api_message_services_proto_goTypes = nil
	file_lorawan_stack_api_message_services_proto_depIdxs = nil
}
