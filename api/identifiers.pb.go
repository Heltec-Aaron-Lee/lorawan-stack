// Copyright Â© 2019 The Things Network Foundation, The Things Industries B.V.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: lorawan-stack/api/identifiers.proto

package api

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ApplicationIdentifiers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId string `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
}

func (x *ApplicationIdentifiers) Reset() {
	*x = ApplicationIdentifiers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lorawan_stack_api_identifiers_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationIdentifiers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationIdentifiers) ProtoMessage() {}

func (x *ApplicationIdentifiers) ProtoReflect() protoreflect.Message {
	mi := &file_lorawan_stack_api_identifiers_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationIdentifiers.ProtoReflect.Descriptor instead.
func (*ApplicationIdentifiers) Descriptor() ([]byte, []int) {
	return file_lorawan_stack_api_identifiers_proto_rawDescGZIP(), []int{0}
}

func (x *ApplicationIdentifiers) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

type ClientIdentifiers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *ClientIdentifiers) Reset() {
	*x = ClientIdentifiers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lorawan_stack_api_identifiers_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientIdentifiers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientIdentifiers) ProtoMessage() {}

func (x *ClientIdentifiers) ProtoReflect() protoreflect.Message {
	mi := &file_lorawan_stack_api_identifiers_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientIdentifiers.ProtoReflect.Descriptor instead.
func (*ClientIdentifiers) Descriptor() ([]byte, []int) {
	return file_lorawan_stack_api_identifiers_proto_rawDescGZIP(), []int{1}
}

func (x *ClientIdentifiers) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type EndDeviceIdentifiers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId       string                  `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	ApplicationIds *ApplicationIdentifiers `protobuf:"bytes,2,opt,name=application_ids,json=applicationIds,proto3" json:"application_ids,omitempty"`
	// The LoRaWAN DevEUI.
	DevEui []byte `protobuf:"bytes,4,opt,name=dev_eui,json=devEui,proto3" json:"dev_eui,omitempty"`
	// The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).
	JoinEui []byte `protobuf:"bytes,5,opt,name=join_eui,json=joinEui,proto3" json:"join_eui,omitempty"`
	// The LoRaWAN DevAddr.
	DevAddr []byte `protobuf:"bytes,6,opt,name=dev_addr,json=devAddr,proto3" json:"dev_addr,omitempty"`
}

func (x *EndDeviceIdentifiers) Reset() {
	*x = EndDeviceIdentifiers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lorawan_stack_api_identifiers_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndDeviceIdentifiers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndDeviceIdentifiers) ProtoMessage() {}

func (x *EndDeviceIdentifiers) ProtoReflect() protoreflect.Message {
	mi := &file_lorawan_stack_api_identifiers_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndDeviceIdentifiers.ProtoReflect.Descriptor instead.
func (*EndDeviceIdentifiers) Descriptor() ([]byte, []int) {
	return file_lorawan_stack_api_identifiers_proto_rawDescGZIP(), []int{2}
}

func (x *EndDeviceIdentifiers) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *EndDeviceIdentifiers) GetApplicationIds() *ApplicationIdentifiers {
	if x != nil {
		return x.ApplicationIds
	}
	return nil
}

func (x *EndDeviceIdentifiers) GetDevEui() []byte {
	if x != nil {
		return x.DevEui
	}
	return nil
}

func (x *EndDeviceIdentifiers) GetJoinEui() []byte {
	if x != nil {
		return x.JoinEui
	}
	return nil
}

func (x *EndDeviceIdentifiers) GetDevAddr() []byte {
	if x != nil {
		return x.DevAddr
	}
	return nil
}

type GatewayIdentifiers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GatewayId string `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	// Secondary identifier, which can only be used in specific requests.
	Eui []byte `protobuf:"bytes,2,opt,name=eui,proto3" json:"eui,omitempty"`
}

func (x *GatewayIdentifiers) Reset() {
	*x = GatewayIdentifiers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lorawan_stack_api_identifiers_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayIdentifiers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayIdentifiers) ProtoMessage() {}

func (x *GatewayIdentifiers) ProtoReflect() protoreflect.Message {
	mi := &file_lorawan_stack_api_identifiers_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayIdentifiers.ProtoReflect.Descriptor instead.
func (*GatewayIdentifiers) Descriptor() ([]byte, []int) {
	return file_lorawan_stack_api_identifiers_proto_rawDescGZIP(), []int{3}
}

func (x *GatewayIdentifiers) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *GatewayIdentifiers) GetEui() []byte {
	if x != nil {
		return x.Eui
	}
	return nil
}

type OrganizationIdentifiers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This ID shares namespace with user IDs.
	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
}

func (x *OrganizationIdentifiers) Reset() {
	*x = OrganizationIdentifiers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lorawan_stack_api_identifiers_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrganizationIdentifiers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganizationIdentifiers) ProtoMessage() {}

func (x *OrganizationIdentifiers) ProtoReflect() protoreflect.Message {
	mi := &file_lorawan_stack_api_identifiers_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganizationIdentifiers.ProtoReflect.Descriptor instead.
func (*OrganizationIdentifiers) Descriptor() ([]byte, []int) {
	return file_lorawan_stack_api_identifiers_proto_rawDescGZIP(), []int{4}
}

func (x *OrganizationIdentifiers) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

type UserIdentifiers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This ID shares namespace with organization IDs.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Secondary identifier, which can only be used in specific requests.
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *UserIdentifiers) Reset() {
	*x = UserIdentifiers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lorawan_stack_api_identifiers_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserIdentifiers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIdentifiers) ProtoMessage() {}

func (x *UserIdentifiers) ProtoReflect() protoreflect.Message {
	mi := &file_lorawan_stack_api_identifiers_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIdentifiers.ProtoReflect.Descriptor instead.
func (*UserIdentifiers) Descriptor() ([]byte, []int) {
	return file_lorawan_stack_api_identifiers_proto_rawDescGZIP(), []int{5}
}

func (x *UserIdentifiers) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserIdentifiers) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// OrganizationOrUserIdentifiers contains either organization or user identifiers.
type OrganizationOrUserIdentifiers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Ids:
	//	*OrganizationOrUserIdentifiers_OrganizationIds
	//	*OrganizationOrUserIdentifiers_UserIds
	Ids isOrganizationOrUserIdentifiers_Ids `protobuf_oneof:"ids"`
}

func (x *OrganizationOrUserIdentifiers) Reset() {
	*x = OrganizationOrUserIdentifiers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lorawan_stack_api_identifiers_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrganizationOrUserIdentifiers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganizationOrUserIdentifiers) ProtoMessage() {}

func (x *OrganizationOrUserIdentifiers) ProtoReflect() protoreflect.Message {
	mi := &file_lorawan_stack_api_identifiers_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganizationOrUserIdentifiers.ProtoReflect.Descriptor instead.
func (*OrganizationOrUserIdentifiers) Descriptor() ([]byte, []int) {
	return file_lorawan_stack_api_identifiers_proto_rawDescGZIP(), []int{6}
}

func (m *OrganizationOrUserIdentifiers) GetIds() isOrganizationOrUserIdentifiers_Ids {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (x *OrganizationOrUserIdentifiers) GetOrganizationIds() *OrganizationIdentifiers {
	if x, ok := x.GetIds().(*OrganizationOrUserIdentifiers_OrganizationIds); ok {
		return x.OrganizationIds
	}
	return nil
}

func (x *OrganizationOrUserIdentifiers) GetUserIds() *UserIdentifiers {
	if x, ok := x.GetIds().(*OrganizationOrUserIdentifiers_UserIds); ok {
		return x.UserIds
	}
	return nil
}

type isOrganizationOrUserIdentifiers_Ids interface {
	isOrganizationOrUserIdentifiers_Ids()
}

type OrganizationOrUserIdentifiers_OrganizationIds struct {
	OrganizationIds *OrganizationIdentifiers `protobuf:"bytes,1,opt,name=organization_ids,json=organizationIds,proto3,oneof"`
}

type OrganizationOrUserIdentifiers_UserIds struct {
	UserIds *UserIdentifiers `protobuf:"bytes,2,opt,name=user_ids,json=userIds,proto3,oneof"`
}

func (*OrganizationOrUserIdentifiers_OrganizationIds) isOrganizationOrUserIdentifiers_Ids() {}

func (*OrganizationOrUserIdentifiers_UserIds) isOrganizationOrUserIdentifiers_Ids() {}

// EntityIdentifiers contains one of the possible entity identifiers.
type EntityIdentifiers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Ids:
	//	*EntityIdentifiers_ApplicationIds
	//	*EntityIdentifiers_ClientIds
	//	*EntityIdentifiers_DeviceIds
	//	*EntityIdentifiers_GatewayIds
	//	*EntityIdentifiers_OrganizationIds
	//	*EntityIdentifiers_UserIds
	Ids isEntityIdentifiers_Ids `protobuf_oneof:"ids"`
}

func (x *EntityIdentifiers) Reset() {
	*x = EntityIdentifiers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lorawan_stack_api_identifiers_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityIdentifiers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityIdentifiers) ProtoMessage() {}

func (x *EntityIdentifiers) ProtoReflect() protoreflect.Message {
	mi := &file_lorawan_stack_api_identifiers_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityIdentifiers.ProtoReflect.Descriptor instead.
func (*EntityIdentifiers) Descriptor() ([]byte, []int) {
	return file_lorawan_stack_api_identifiers_proto_rawDescGZIP(), []int{7}
}

func (m *EntityIdentifiers) GetIds() isEntityIdentifiers_Ids {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (x *EntityIdentifiers) GetApplicationIds() *ApplicationIdentifiers {
	if x, ok := x.GetIds().(*EntityIdentifiers_ApplicationIds); ok {
		return x.ApplicationIds
	}
	return nil
}

func (x *EntityIdentifiers) GetClientIds() *ClientIdentifiers {
	if x, ok := x.GetIds().(*EntityIdentifiers_ClientIds); ok {
		return x.ClientIds
	}
	return nil
}

func (x *EntityIdentifiers) GetDeviceIds() *EndDeviceIdentifiers {
	if x, ok := x.GetIds().(*EntityIdentifiers_DeviceIds); ok {
		return x.DeviceIds
	}
	return nil
}

func (x *EntityIdentifiers) GetGatewayIds() *GatewayIdentifiers {
	if x, ok := x.GetIds().(*EntityIdentifiers_GatewayIds); ok {
		return x.GatewayIds
	}
	return nil
}

func (x *EntityIdentifiers) GetOrganizationIds() *OrganizationIdentifiers {
	if x, ok := x.GetIds().(*EntityIdentifiers_OrganizationIds); ok {
		return x.OrganizationIds
	}
	return nil
}

func (x *EntityIdentifiers) GetUserIds() *UserIdentifiers {
	if x, ok := x.GetIds().(*EntityIdentifiers_UserIds); ok {
		return x.UserIds
	}
	return nil
}

type isEntityIdentifiers_Ids interface {
	isEntityIdentifiers_Ids()
}

type EntityIdentifiers_ApplicationIds struct {
	ApplicationIds *ApplicationIdentifiers `protobuf:"bytes,1,opt,name=application_ids,json=applicationIds,proto3,oneof"`
}

type EntityIdentifiers_ClientIds struct {
	ClientIds *ClientIdentifiers `protobuf:"bytes,2,opt,name=client_ids,json=clientIds,proto3,oneof"`
}

type EntityIdentifiers_DeviceIds struct {
	DeviceIds *EndDeviceIdentifiers `protobuf:"bytes,3,opt,name=device_ids,json=deviceIds,proto3,oneof"`
}

type EntityIdentifiers_GatewayIds struct {
	GatewayIds *GatewayIdentifiers `protobuf:"bytes,4,opt,name=gateway_ids,json=gatewayIds,proto3,oneof"`
}

type EntityIdentifiers_OrganizationIds struct {
	OrganizationIds *OrganizationIdentifiers `protobuf:"bytes,5,opt,name=organization_ids,json=organizationIds,proto3,oneof"`
}

type EntityIdentifiers_UserIds struct {
	UserIds *UserIdentifiers `protobuf:"bytes,6,opt,name=user_ids,json=userIds,proto3,oneof"`
}

func (*EntityIdentifiers_ApplicationIds) isEntityIdentifiers_Ids() {}

func (*EntityIdentifiers_ClientIds) isEntityIdentifiers_Ids() {}

func (*EntityIdentifiers_DeviceIds) isEntityIdentifiers_Ids() {}

func (*EntityIdentifiers_GatewayIds) isEntityIdentifiers_Ids() {}

func (*EntityIdentifiers_OrganizationIds) isEntityIdentifiers_Ids() {}

func (*EntityIdentifiers_UserIds) isEntityIdentifiers_Ids() {}

// Combine the identifiers of multiple entities.
// The main purpose of this message is its use in events.
type CombinedIdentifiers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityIdentifiers []*EntityIdentifiers `protobuf:"bytes,1,rep,name=entity_identifiers,json=entityIdentifiers,proto3" json:"entity_identifiers,omitempty"`
}

func (x *CombinedIdentifiers) Reset() {
	*x = CombinedIdentifiers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lorawan_stack_api_identifiers_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombinedIdentifiers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombinedIdentifiers) ProtoMessage() {}

func (x *CombinedIdentifiers) ProtoReflect() protoreflect.Message {
	mi := &file_lorawan_stack_api_identifiers_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombinedIdentifiers.ProtoReflect.Descriptor instead.
func (*CombinedIdentifiers) Descriptor() ([]byte, []int) {
	return file_lorawan_stack_api_identifiers_proto_rawDescGZIP(), []int{8}
}

func (x *CombinedIdentifiers) GetEntityIdentifiers() []*EntityIdentifiers {
	if x != nil {
		return x.EntityIdentifiers
	}
	return nil
}

var File_lorawan_stack_api_identifiers_proto protoreflect.FileDescriptor

var file_lorawan_stack_api_identifiers_proto_rawDesc = []byte{
	0x0a, 0x23, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e, 0x2d, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x74, 0x74, 0x6e, 0x2e, 0x6c, 0x6f, 0x72, 0x61, 0x77,
	0x61, 0x6e, 0x2e, 0x76, 0x33, 0x1a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7f, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x73, 0x12, 0x5f, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x38, 0xe2, 0xde, 0x1f, 0x0d, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0xfa, 0x42, 0x24, 0x72,
	0x22, 0x18, 0x24, 0x32, 0x1e, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x28, 0x3f,
	0x3a, 0x5b, 0x2d, 0x5d, 0x3f, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x7b, 0x32,
	0x2c, 0x7d, 0x24, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x3a, 0x04, 0xb8, 0xa0, 0x1f, 0x00, 0x22, 0x6b, 0x0a, 0x11, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x50, 0x0a,
	0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x33, 0xe2, 0xde, 0x1f, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0xfa, 0x42,
	0x24, 0x72, 0x22, 0x18, 0x24, 0x32, 0x1e, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d,
	0x28, 0x3f, 0x3a, 0x5b, 0x2d, 0x5d, 0x3f, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29,
	0x7b, 0x32, 0x2c, 0x7d, 0x24, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x3a,
	0x04, 0xb8, 0xa0, 0x1f, 0x00, 0x22, 0xe8, 0x03, 0x0a, 0x14, 0x45, 0x6e, 0x64, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x50,
	0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x33, 0xe2, 0xde, 0x1f, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0xfa,
	0x42, 0x24, 0x72, 0x22, 0x18, 0x24, 0x32, 0x1e, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39,
	0x5d, 0x28, 0x3f, 0x3a, 0x5b, 0x2d, 0x5d, 0x3f, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d,
	0x29, 0x7b, 0x32, 0x2c, 0x7d, 0x24, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x61, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x74, 0x6e, 0x2e,
	0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x73, 0x42, 0x10, 0xd0, 0xde, 0x1f, 0x01, 0xc8, 0xde, 0x1f, 0x00, 0xfa, 0x42, 0x05, 0x8a, 0x01,
	0x02, 0x10, 0x01, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x73, 0x12, 0x5c, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x5f, 0x65, 0x75, 0x69, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x42, 0x43, 0xda, 0xde, 0x1f, 0x35, 0x67, 0x6f, 0x2e, 0x74, 0x68, 0x65,
	0x74, 0x68, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x6c,
	0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e, 0x2d, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f, 0x76, 0x33, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x55, 0x49, 0x36, 0x34, 0xe2,
	0xde, 0x1f, 0x06, 0x44, 0x65, 0x76, 0x45, 0x55, 0x49, 0x52, 0x06, 0x64, 0x65, 0x76, 0x45, 0x75,
	0x69, 0x12, 0x5f, 0x0a, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x65, 0x75, 0x69, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x42, 0x44, 0xda, 0xde, 0x1f, 0x35, 0x67, 0x6f, 0x2e, 0x74, 0x68, 0x65, 0x74,
	0x68, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x6c, 0x6f,
	0x72, 0x61, 0x77, 0x61, 0x6e, 0x2d, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f, 0x76, 0x33, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x55, 0x49, 0x36, 0x34, 0xe2, 0xde,
	0x1f, 0x07, 0x4a, 0x6f, 0x69, 0x6e, 0x45, 0x55, 0x49, 0x52, 0x07, 0x6a, 0x6f, 0x69, 0x6e, 0x45,
	0x75, 0x69, 0x12, 0x56, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0c, 0x42, 0x3b, 0xda, 0xde, 0x1f, 0x37, 0x67, 0x6f, 0x2e, 0x74, 0x68, 0x65,
	0x74, 0x68, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x6c,
	0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e, 0x2d, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f, 0x76, 0x33, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x41, 0x64, 0x64,
	0x72, 0x52, 0x07, 0x64, 0x65, 0x76, 0x41, 0x64, 0x64, 0x72, 0x3a, 0x04, 0xb8, 0xa0, 0x1f, 0x00,
	0x22, 0xc3, 0x01, 0x0a, 0x12, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x53, 0x0a, 0x0a, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x34, 0xe2, 0xde, 0x1f,
	0x09, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x44, 0xfa, 0x42, 0x24, 0x72, 0x22, 0x18,
	0x24, 0x32, 0x1e, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x28, 0x3f, 0x3a, 0x5b,
	0x2d, 0x5d, 0x3f, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x7b, 0x32, 0x2c, 0x7d,
	0x24, 0x52, 0x09, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x64, 0x12, 0x52, 0x0a, 0x03,
	0x65, 0x75, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x40, 0xda, 0xde, 0x1f, 0x35, 0x67,
	0x6f, 0x2e, 0x74, 0x68, 0x65, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2f, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e, 0x2d, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x2f, 0x76, 0x33, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45,
	0x55, 0x49, 0x36, 0x34, 0xe2, 0xde, 0x1f, 0x03, 0x45, 0x55, 0x49, 0x52, 0x03, 0x65, 0x75, 0x69,
	0x3a, 0x04, 0xb8, 0xa0, 0x1f, 0x00, 0x22, 0x83, 0x01, 0x0a, 0x17, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x73, 0x12, 0x62, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x39, 0xe2, 0xde, 0x1f,
	0x0e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0xfa,
	0x42, 0x24, 0x72, 0x22, 0x18, 0x24, 0x32, 0x1e, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39,
	0x5d, 0x28, 0x3f, 0x3a, 0x5b, 0x2d, 0x5d, 0x3f, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d,
	0x29, 0x7b, 0x32, 0x2c, 0x7d, 0x24, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x3a, 0x04, 0xb8, 0xa0, 0x1f, 0x00, 0x22, 0x79, 0x0a, 0x0f,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12,
	0x4a, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x31, 0xe2, 0xde, 0x1f, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0xfa, 0x42, 0x24, 0x72,
	0x22, 0x18, 0x24, 0x32, 0x1e, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x28, 0x3f,
	0x3a, 0x5b, 0x2d, 0x5d, 0x3f, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x7b, 0x32,
	0x2c, 0x7d, 0x24, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x3a, 0x04, 0xb8, 0xa0, 0x1f, 0x00, 0x22, 0xe1, 0x01, 0x0a, 0x1d, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x69, 0x0a, 0x10, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x74, 0x6e, 0x2e, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61,
	0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x42, 0x13, 0xe2, 0xde,
	0x1f, 0x0f, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x73, 0x48, 0x00, 0x52, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x73, 0x12, 0x49, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x74, 0x6e, 0x2e, 0x6c, 0x6f, 0x72,
	0x61, 0x77, 0x61, 0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x42, 0x0b, 0xe2, 0xde, 0x1f, 0x07, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x73, 0x48, 0x00, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x42,
	0x0a, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0xbc, 0x04, 0x0a, 0x11,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x73, 0x12, 0x65, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x74, 0x6e,
	0x2e, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x73, 0x42, 0x12, 0xe2, 0xde, 0x1f, 0x0e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x51, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74,
	0x74, 0x6e, 0x2e, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x42,
	0x0d, 0xe2, 0xde, 0x1f, 0x09, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x48, 0x00,
	0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x54, 0x0a, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x74, 0x74, 0x6e, 0x2e, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e, 0x2e, 0x76, 0x33,
	0x2e, 0x45, 0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x73, 0x42, 0x0d, 0xe2, 0xde, 0x1f, 0x09, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x44, 0x73, 0x48, 0x00, 0x52, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x73, 0x12, 0x55, 0x0a, 0x0b, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x74, 0x6e, 0x2e, 0x6c, 0x6f, 0x72,
	0x61, 0x77, 0x61, 0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x42, 0x0e, 0xe2, 0xde, 0x1f, 0x0a,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x44, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x64, 0x73, 0x12, 0x69, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x74, 0x6e, 0x2e, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e,
	0x2e, 0x76, 0x33, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x42, 0x13, 0xe2, 0xde, 0x1f,
	0x0f, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x73,
	0x48, 0x00, 0x52, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x73, 0x12, 0x49, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x74, 0x6e, 0x2e, 0x6c, 0x6f, 0x72, 0x61,
	0x77, 0x61, 0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x42, 0x0b, 0xe2, 0xde, 0x1f, 0x07, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x73, 0x48, 0x00, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x42, 0x0a,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0x67, 0x0a, 0x13, 0x43, 0x6f,
	0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x73, 0x12, 0x50, 0x0a, 0x12, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x74, 0x74, 0x6e, 0x2e, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73,
	0x52, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x73, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x6f, 0x2e, 0x74, 0x68, 0x65, 0x74, 0x68, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x6c, 0x6f, 0x72, 0x61,
	0x77, 0x61, 0x6e, 0x2d, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x70, 0x69,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lorawan_stack_api_identifiers_proto_rawDescOnce sync.Once
	file_lorawan_stack_api_identifiers_proto_rawDescData = file_lorawan_stack_api_identifiers_proto_rawDesc
)

func file_lorawan_stack_api_identifiers_proto_rawDescGZIP() []byte {
	file_lorawan_stack_api_identifiers_proto_rawDescOnce.Do(func() {
		file_lorawan_stack_api_identifiers_proto_rawDescData = protoimpl.X.CompressGZIP(file_lorawan_stack_api_identifiers_proto_rawDescData)
	})
	return file_lorawan_stack_api_identifiers_proto_rawDescData
}

var file_lorawan_stack_api_identifiers_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_lorawan_stack_api_identifiers_proto_goTypes = []interface{}{
	(*ApplicationIdentifiers)(nil),        // 0: ttn.lorawan.v3.ApplicationIdentifiers
	(*ClientIdentifiers)(nil),             // 1: ttn.lorawan.v3.ClientIdentifiers
	(*EndDeviceIdentifiers)(nil),          // 2: ttn.lorawan.v3.EndDeviceIdentifiers
	(*GatewayIdentifiers)(nil),            // 3: ttn.lorawan.v3.GatewayIdentifiers
	(*OrganizationIdentifiers)(nil),       // 4: ttn.lorawan.v3.OrganizationIdentifiers
	(*UserIdentifiers)(nil),               // 5: ttn.lorawan.v3.UserIdentifiers
	(*OrganizationOrUserIdentifiers)(nil), // 6: ttn.lorawan.v3.OrganizationOrUserIdentifiers
	(*EntityIdentifiers)(nil),             // 7: ttn.lorawan.v3.EntityIdentifiers
	(*CombinedIdentifiers)(nil),           // 8: ttn.lorawan.v3.CombinedIdentifiers
}
var file_lorawan_stack_api_identifiers_proto_depIdxs = []int32{
	0,  // 0: ttn.lorawan.v3.EndDeviceIdentifiers.application_ids:type_name -> ttn.lorawan.v3.ApplicationIdentifiers
	4,  // 1: ttn.lorawan.v3.OrganizationOrUserIdentifiers.organization_ids:type_name -> ttn.lorawan.v3.OrganizationIdentifiers
	5,  // 2: ttn.lorawan.v3.OrganizationOrUserIdentifiers.user_ids:type_name -> ttn.lorawan.v3.UserIdentifiers
	0,  // 3: ttn.lorawan.v3.EntityIdentifiers.application_ids:type_name -> ttn.lorawan.v3.ApplicationIdentifiers
	1,  // 4: ttn.lorawan.v3.EntityIdentifiers.client_ids:type_name -> ttn.lorawan.v3.ClientIdentifiers
	2,  // 5: ttn.lorawan.v3.EntityIdentifiers.device_ids:type_name -> ttn.lorawan.v3.EndDeviceIdentifiers
	3,  // 6: ttn.lorawan.v3.EntityIdentifiers.gateway_ids:type_name -> ttn.lorawan.v3.GatewayIdentifiers
	4,  // 7: ttn.lorawan.v3.EntityIdentifiers.organization_ids:type_name -> ttn.lorawan.v3.OrganizationIdentifiers
	5,  // 8: ttn.lorawan.v3.EntityIdentifiers.user_ids:type_name -> ttn.lorawan.v3.UserIdentifiers
	7,  // 9: ttn.lorawan.v3.CombinedIdentifiers.entity_identifiers:type_name -> ttn.lorawan.v3.EntityIdentifiers
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_lorawan_stack_api_identifiers_proto_init() }
func file_lorawan_stack_api_identifiers_proto_init() {
	if File_lorawan_stack_api_identifiers_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lorawan_stack_api_identifiers_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationIdentifiers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lorawan_stack_api_identifiers_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientIdentifiers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lorawan_stack_api_identifiers_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndDeviceIdentifiers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lorawan_stack_api_identifiers_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayIdentifiers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lorawan_stack_api_identifiers_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrganizationIdentifiers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lorawan_stack_api_identifiers_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserIdentifiers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lorawan_stack_api_identifiers_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrganizationOrUserIdentifiers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lorawan_stack_api_identifiers_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityIdentifiers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lorawan_stack_api_identifiers_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombinedIdentifiers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_lorawan_stack_api_identifiers_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*OrganizationOrUserIdentifiers_OrganizationIds)(nil),
		(*OrganizationOrUserIdentifiers_UserIds)(nil),
	}
	file_lorawan_stack_api_identifiers_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*EntityIdentifiers_ApplicationIds)(nil),
		(*EntityIdentifiers_ClientIds)(nil),
		(*EntityIdentifiers_DeviceIds)(nil),
		(*EntityIdentifiers_GatewayIds)(nil),
		(*EntityIdentifiers_OrganizationIds)(nil),
		(*EntityIdentifiers_UserIds)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lorawan_stack_api_identifiers_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lorawan_stack_api_identifiers_proto_goTypes,
		DependencyIndexes: file_lorawan_stack_api_identifiers_proto_depIdxs,
		MessageInfos:      file_lorawan_stack_api_identifiers_proto_msgTypes,
	}.Build()
	File_lorawan_stack_api_identifiers_proto = out.File
	file_lorawan_stack_api_identifiers_proto_rawDesc = nil
	file_lorawan_stack_api_identifiers_proto_goTypes = nil
	file_lorawan_stack_api_identifiers_proto_depIdxs = nil
}
